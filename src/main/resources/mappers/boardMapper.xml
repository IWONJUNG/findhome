<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.BoardMapper">

	<select id="getMaxNum" resultType="java.lang.Integer">
		select max(room_id) from
		one_room
	</select>

	<resultMap id="OneRoomBean"
		type="com.itwillbs.domain.OneRoomBean">
		<result property="include_options" column="include_options"
			typeHandler="com.itwillbs.mapper.type.JSONTypeHandler" />
		<result property="include_fees" column="include_fees"
			typeHandler="com.itwillbs.mapper.type.JSONTypeHandler" />
	</resultMap>

	<insert id="insertRoom" useGeneratedKeys="true"
		keyProperty="room_id">
		INSERT INTO `one_room`
		(`address`, `deposit`,
		`monthly_rent`, `room_type`, `fees`,
		`include_fees`,
		`exclusive_area_m`,
		`exclusive_area_p`, `contract_area_m`,
		`contract_area_p`,
		`floor`, `living_floor`, `direction`,
		`include_options`,
		`loan`, `pet`, `parking`,
		`elevator`, `m_date`,
		`subject`,
		`content`,
		`phone_number`,
		`seller_id`, `category`,
		`premium_expiry_date`) VALUES (
		#{address},
		#{deposit},
		#{monthly_rent},
		#{room_type}, #{fees},
		#{include_fees,typeHandler=com.itwillbs.mapper.type.JSONTypeHandler},
		#{exclusive_area_m},
		#{exclusive_area_p}, #{contract_area_m},
		#{contract_area_p},
		#{floor}, #{living_floor}, #{direction},
		#{include_options,typeHandler=com.itwillbs.mapper.type.JSONTypeHandler},
		#{loan},
		#{pet},
		#{parking},
		#{elevator}, #{m_date}, #{subject},
		#{content},
		#{phone_number}, #{seller_id}, #{category},
		#{premium_expiry_date} )
	</insert>

	<insert id="insertRoomImg">
		INSERT INTO `one_room_pic` (`id`, `room_id`,
		`file_name`, 'original_file_name') VALUES (#{id},
		#{room_id},
		#{file_name},
		#{original_file_name})
		#{room_id}, #{file_name},
		#{original_file_name})
	</insert>

	<insert id="insertRoomImages" parameterType="java.util.List">
		INSERT INTO
		one_room_pic
		(room_id, file_name, original_file_name)
		VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.room_id}, #{item.file_name}, #{item.original_file_name})
		</foreach>
	</insert>

	<select id="getBoardList"
		resultType="com.itwillbs.domain.OneRoomBean">
		select * from one_room
		where category=#{category} and
		is_selling=#{is_selling}
		order by room_id desc limit
		#{startRow},#{pageSize}
	</select>


	<select id="getBoardCount" resultType="java.lang.Integer">
		select count(*) from
		one_room
		where category=#{category} and is_selling=#{is_selling}
	</select>



	<select id="getWishList"
		resultType="com.itwillbs.domain.OneRoomBean">
		select address, subject, room_id, monthly_rent, deposit,
		phone_number, id, category
		from wish_list
		join
		one_room
		on wish_list.wish
		= one_room.room_id
		where id=
		#{id}
		order by
		room_id desc limit
		#{startRow},#{pageSize}
	</select>

	<select id="getWishCount" resultType="java.lang.Integer">
		select count(*) from
		wish_list where id=#{id}
	</select>



	<select id="getSearchList"
		resultType="com.itwillbs.domain.OneRoomBean">
		select *
		from one_room
		<![CDATA[ 
		where 
        (subject like #{search} || content like #{search} || address like #{search})
		and (room_type REGEXP #{room_type})
		and (living_floor REGEXP #{living_floor})
		 and (deposit >= #{deposit_min} and deposit <= #{deposit_max})
        and (monthly_rent >= #{monthly_rent_min} and monthly_rent <= #{monthly_rent_max})
        and (category=#{category})
        and (is_selling=#{is_selling})
       ]]>
	</select>



	<select id="getSalesList"
		resultType="com.itwillbs.domain.OneRoomBean">
		select * from one_room
		where seller_id=#{seller_id} and
		is_selling=#{is_selling}
		order by room_id desc limit
		#{startRow},#{pageSize}
	</select>

	<select id="getSalesCount" resultType="java.lang.Integer">
		select count(*) from
		one_room
		where seller_id=#{seller_id} and is_selling=#{is_selling}
	</select>

	<select id="getSalesCategoryCount"
		resultType="java.lang.Integer">
		select count(*) from one_room
		where (seller_id=#{seller_id})
		and (category=#{category})
		and
		is_selling=#{is_selling}
	</select>


	<select id="sellerLatestBoard"
		resultType="com.itwillbs.domain.OneRoomBean">
		select *
		from one_room
		where seller_id=#{seller_id}
		order by
		room_id desc
		limit 5
	</select>

	<select id="getQnaBoard"
		resultType="com.itwillbs.domain.qnaBean">
		select qna_id, qna.content, member_normal.phone_number,
		qna.room_id, sender, answer, answerYN, seller_id
		from qna
		join
		member_normal
		on qna.sender = member_normal.id
		join one_room
		on
		one_room.room_id = qna.room_id
		where seller_id = #{seller_id}
		order by
		qna_id desc limit #{startRow},#{pageSize}
	</select>

	<select id="getQna" resultType="com.itwillbs.domain.qnaBean">
		select qna_id, content,
		member_normal.phone_number, room_id, sender, answer, answerYN
		from qna
		join member_normal
		on qna.sender = member_normal.id
		where qna_id =
		#{qna_id}

	</select>

	<update id="answerQna">
		update qna
		set answer=#{answer}, answerYN=#{answerYN}
		where qna_id=#{qna_id}

	</update>


	<select id="getMemberQna"
		resultType="com.itwillbs.domain.qnaBean">
		select qna_id, qna.content, member_normal.phone_number,
		qna.room_id, sender, answer, answerYN, seller_id
		from qna
		join
		member_normal
		on qna.sender = member_normal.id
		join one_room
		on
		one_room.room_id = qna.room_id
		where sender = #{sender}
		order by qna_id
		desc limit #{startRow},#{pageSize}
	</select>


	<select id="getMemberQnaCount" resultType="java.lang.Integer">
		select count(*)
		from
		qna
		join member_normal
		on qna.sender = member_normal.id
		join one_room
		on
		one_room.room_id = qna.room_id
		where sender = #{sender}
	</select>



	<select id="getQnaBoardCount" resultType="java.lang.Integer">
		select count(*)
		from qna
		join member_normal
		on qna.sender = member_normal.id
		join one_room
		on
		one_room.room_id = qna.room_id
		where seller_id = #{seller_id}
	</select>

	<select id="qnaLatestBoard"
		resultType="com.itwillbs.domain.qnaBean">
		select qna_id, qna.content, member_normal.phone_number,
		qna.room_id, sender, answer, answerYN, seller_id
		from qna
		join
		member_normal
		on qna.sender = member_normal.id
		join one_room
		on
		one_room.room_id = qna.room_id
		where seller_id = #{seller_id}
		order by
		qna_id desc
		limit 5
	</select>

	<update id="updateSalesState">
		update one_room set is_selling=#{is_selling} where
		room_id=#{room_id}

	</update>

	<select id="boardCheck"
		resultType="com.itwillbs.domain.OneRoomBean">
		select * from one_room where
		room_id=#{room_id} and
		seller_id=#{seller_id}
	</select>


	<update id="updateRoom">
		update one_room set
		address=#{address},
		deposit=#{deposit},
		monthly_rent=#{monthly_rent},
		room_type=#{room_type},
		fees=#{fees},
		include_fees=#{include_fees,typeHandler=com.itwillbs.mapper.type.JSONTypeHandler},
		exclusive_area_m=#{exclusive_area_m},
		exclusive_area_p=#{exclusive_area_p},
		contract_area_m=#{contract_area_m},
		contract_area_p=#{contract_area_p},
		floor=#{floor},
		living_floor=#{living_floor},
		direction=#{direction},
		include_options=#{include_options,typeHandler=com.itwillbs.mapper.type.JSONTypeHandler},
		loan=#{loan},
		pet=#{pet},
		parking=#{parking},
		elevator=#{elevator},
		m_date=#{m_date},
		subject=#{subject},
		content=#{content},
		phone_number=#{phone_number},
		seller_id=#{seller_id},
		category=
		#{category}

		where
		room_id=#{room_id}
	</update>



	<select id="getBoard"
		resultType="com.itwillbs.domain.OneRoomBean">
		select * from one_room where
		room_id=#{room_id}
	</select>

	<select id="numCheck"
		resultType="com.itwillbs.domain.OneRoomBean">
		select * from one_room where
		room_id=#{room_id} and
		pass=#{pass}
	</select>

	<update id="updateBoard">
		update one_room set name=#{name}, subject=#{subject},
		content=#{content}
		where room_id=#{room_id}
	</update>

	<delete id="deleteBoard">
		delete from one_room where room_id=#{room_id}
	</delete>

	<select id="getRoom" resultMap="OneRoomBean">
		select * from
		one_room
		where
		room_id=#{room_id}
	</select>

	<select id="getImage" resultType="com.itwillbs.domain.ImageBean">
		select * from
		one_room_pic
		where
		room_id=#{room_id}
	</select>

	<select id="selectOneRoomThumbImg"
		resultType="java.util.LinkedHashMap">
		SELECT p.room_id, p.subject, p.address, p.deposit,
		p.monthly_rent, i.file_name, p.category, p.seller_id, p.phone_number
		FROM one_room p
		LEFT JOIN
		one_room_pic i
		ON i.id = (SELECT MIN(i1.id) FROM one_room_pic i1 WHERE
		i1.room_id = p.room_id)
		ORDER BY i.id DESC
		LIMIT 10
	</select>

	<insert id="insertqna">
		INSERT INTO `qna` (`content`, `phone_number`,
		`room_id`,`sender`,`answer`,`answerYN`)
		VALUES (#{content}, #{phone_number},
		#{room_id},#{sender},#{answer},#{answerYN})
	</insert>

	<delete id="deleteRoomImage">
		delete from one_room_pic where room_id=#{room_id}
	</delete>


	<insert id="insertReport">
		insert into report (content,room_id)
		values
		(#{content},#{room_id})
	</insert>

	<delete id="deleteRoomImagebyRoomID">
		delete from one_room_pic where room_id=#{room_id}
	</delete>

	<delete id="deleteRoomImagebyFileID">
		delete from one_room_pic where id=#{id}
	</delete>

	<select id="selectPopularRooms"
		resultType="java.util.LinkedHashMap">
		SELECT p.room_id, p.subject, p.address, p.deposit,
		p.monthly_rent,
		i.file_name, p.category, w.wish, p.phone_number, p.seller_id, 
		COUNT(w.wish) AS
		wish_count
		FROM
		one_room p
		LEFT JOIN one_room_pic i
		ON i.id = (SELECT
		MIN(i1.id) FROM
		one_room_pic i1 WHERE i1.room_id =
		p.room_id )
		LEFT JOIN
		wish_list w
		ON w.wish = p.room_id
		WHERE p.category=#{category}
		GROUP BY
		w.wish
		ORDER BY
		count(w.wish) DESC
		LIMIT 10
	</select>

	<select id="selectThumbImage"
		resultType="java.util.LinkedHashMap">
		SELECT p.room_id, p.subject, p.address, p.deposit,
		p.monthly_rent, i.file_name, p.category, p.phone_number, p.seller_id
		FROM one_room p
		LEFT JOIN
		one_room_pic i
		ON i.id = (SELECT MIN(i1.id) FROM one_room_pic i1 WHERE
		i1.room_id = p.room_id)
		WHERE p.category=#{category}
		ORDER BY i.id DESC
		LIMIT 10
	</select>
	
	<select id="selectPremiumRoom"
		resultType="java.util.LinkedHashMap">
		SELECT p.room_id, p.subject, p.address, p.deposit,
		p.monthly_rent, i.file_name, p.category, p.premium_expiry_date, p.phone_number, p.seller_id
		FROM one_room p
		LEFT JOIN
		one_room_pic i
		ON i.id = (SELECT MIN(i1.id) FROM one_room_pic i1 WHERE
		i1.room_id = p.room_id)
		WHERE premium_expiry_date >= date_format(now(),'%Y-%m-%d')
		ORDER BY DATE_FORMAT(STR_TO_DATE(premium_expiry_date, '%Y%m%d'),'%Y-%m-%d') DESC
	</select>

</mapper>





